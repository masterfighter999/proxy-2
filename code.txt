/
├── api/                        # Azure Functions backend (Node.js/JS or C#/Python supported)
│   └── negotiate/              # Negotiation/proxy function for Azure Voice Live API
│       ├── index.js            # Function main code (Node.js example)
│       └── function.json       # Function bindings/trigger config
├── host.json                   # Azure Functions global config
├── staticwebapp.config.json    # Static Web App config (routes, CORS, etc)
├── package.json                # Optional (if using npm for api dependencies)
├── public/                     # Static frontend files (optional, if serving a web UI)
│   └── index.html              # (optional)
└── README.md                   # (optional, for docs)


/**
 * Azure Static Web App function for Voice Live API negotiation.
 * Returns a WebSocket URL for the Voice Live API, with model and api-version.
 * 
 * Environment variables:
 *   AZURE_VOICE_LIVE_ENDPOINT (e.g. https://your-resource.voice.azure.com)
 *   AZURE_VOICE_LIVE_API_KEY
 *   AZURE_VOICE_LIVE_MODEL (e.g. gpt-4o)
 */

module.exports = async function (context, req) {
    const AZURE_VOICE_LIVE_ENDPOINT = process.env.AZURE_VOICE_LIVE_ENDPOINT;
    const AZURE_VOICE_LIVE_API_KEY = process.env.AZURE_VOICE_LIVE_API_KEY;
    const AZURE_VOICE_LIVE_MODEL = process.env.AZURE_VOICE_LIVE_MODEL;
    const API_VERSION = '2025-05-01-preview';

    if (!AZURE_VOICE_LIVE_ENDPOINT || !AZURE_VOICE_LIVE_API_KEY || !AZURE_VOICE_LIVE_MODEL) {
        context.res = {
            status: 500,
            body: "Missing Voice Live API endpoint, api-key or model."
        };
        return;
    }

    const wsUrl = AZURE_VOICE_LIVE_ENDPOINT
        .replace('https://', 'wss://')
        .replace(/\/$/, '') +
        `/voice-live/realtime?api-version=${API_VERSION}&model=${AZURE_VOICE_LIVE_MODEL}&api-key=${encodeURIComponent(AZURE_VOICE_LIVE_API_KEY)}`;

    context.res = {
        headers: {
            'Access-Control-Allow-Origin': '*',
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ url: wsUrl })
    };
};

// /api/negotiate/function.json//
{
  "bindings": [
    {
      "authLevel": "anonymous",
      "type": "httpTrigger",
      "direction": "in",
      "name": "req",
      "route": "negotiate",
      "methods": ["get"]
    },
    {
      "type": "http",
      "direction": "out",
      "name": "res"
    }
  ]
}

//  /staticwebapp.config.json //
{
  "networking": {
    "apiCors": {
      "allowedOrigins": [
        "chrome-extension://eblkjbifkjdndolidfpcllckffpakmdp"
      ]
    }
  },
  "routes": [
    {
      "route": "/api/*",
      "methods": ["POST", "GET"],
      "allowedRoles": [
         "anonymous"      
      ] ,
      "globalheaders": {
        "Access-Control-Allow-Origin": "chrome-extension://eblkjbifkjdndolidfpcllckffpakmdp"
      }
    }
  ]
}


//host.json//
{
  "version": "2.0",
  "logging": {
    "applicationInsights": {
      "samplingExcludedTypes": "Request",
      "samplingIncludedTypes": "Dependency",
      "samplingSettings": {
        "isEnabled": true,
        "maxTelemetryItemsPerSecond": 5
      }
    }
  },
  "extensions": {
    "http": {
      "routePrefix": ""
    }
  }
}


//package.json//
{
  "name": "azure-staticwebapp-voice-live-proxy",
  "version": "1.0.0",
  "engines": {
    "node": "18.x"
  },
  "description": "Azure Static Web App backend for Voice Live API WebSocket negotiation (API key over query string).",
  "main": "index.js",
  "scripts": {
    "build": "mkdir -p build && cp -r public/* build/ || true",
    "build:azure": "npm run build",
    "start": "node ./api/negotiate/index.js"
  },
  "author": "",
  "license": "MIT",
  "dependencies": {}
}
